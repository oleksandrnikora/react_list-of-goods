{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleClickReverse","setState","handleClickSortByName","ALPHABET","handleClicksortByLength","LENGTH","handleClickReset","this","reorderedGoods","goods","visibleGoods","console","log","sort","first","second","localeCompare","length","reverse","getReorderedGoods","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,sBAAwB,WACtB,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAdzB,EAkBEC,wBAA0B,WACxB,EAAKH,SAAS,CACZH,SAAUL,EAASY,UApBzB,EAwBEC,iBAAmB,WACjB,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZW,EAvEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAmBzB,OAfAE,QAAQC,IAAId,EAAUD,GAEtBa,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQjB,GACN,KAAKL,EAASU,SACZ,OAAOW,EAAME,cAAcD,GAE7B,KAAKtB,EAASY,OACZ,OAAOS,EAAMG,OAASF,EAAOE,OAE/B,QACE,OAAO,MAITpB,EACKa,EAAaQ,UAGfR,EA2CkBS,CACrBzB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYxB,IAAaL,EAASU,WAEtCoB,QAAShB,KAAKL,sBANhB,iCAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYxB,IAAaL,EAASY,SAEtCkB,QAAShB,KAAKH,wBANhB,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAazB,IAEjB0B,QAAShB,KAAKP,mBANhB,sBAWGF,GAAYD,IAEP,wBACEwB,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,iBAHhB,sBAWV,6BACGE,EAAegB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA1FpC,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa882f13.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((first, second) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return first.localeCompare(second);\n\n      case SortType.LENGTH:\n        return first.length - second.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n type State = {\n   isReversed: boolean,\n   sortType: SortType,\n };\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleClickSortByName = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleClicksortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.handleClickSortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleClicksortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n          {\n            (sortType || isReversed)\n                && (\n                  <button\n                    type=\"button\"\n                    className=\"button is-danger is-light\"\n                    onClick={this.handleClickReset}\n                  >\n                    Reset\n                  </button>\n                )\n          }\n        </div>\n\n        <ul>\n          {reorderedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}